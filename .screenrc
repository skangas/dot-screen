# ~/.screenrc

caption always "%{.bW}%?%-Lw%?%{.rW}%n*%f%t%?(%u)%?%{.bW} %?%+Lw%?%?%=%{..G} %H %{..Y} %m-%d %c "
hardstatus off

defscrollback 10000             # Set the default number of scrollback lines
defencoding UTF-8
defutf8 on                      # Run screen in UTF-8 mode
activity "activity: window ~%"  # Message when activity occurs in a window
vbell_msg "bell: window ~%"     # Message for visual bell
vbellwait 1                     # Seconds to pause the screen for visual bell
allpartial off                  # Refresh entire screen on window change
autodetach on                   # Autodetach session on hangup instead of terminating screen completely
defmode 0620                    # Set the default mode of each pseudo tty
deflogin off                    # Do not register the window in utmp
startup_message off             # Disable startup messages

logfile $HOME/.screen/log.%n
shell zsh
shelltitle "$ |bash"            # Show running process
ignorecase on                   # Case-insensitive search

## TERMINAL

# To get screen to add lines to xterm's scrollback buffer, uncomment the
# following termcapinfo line which tells xterm to use the normal screen buffer
# (which has scrollback), not the alternate screen buffer.
#
termcapinfo xterm|xterms|xs|rxvt ti@:te@

# set these terminals up to be 'optimal' instead of vt100
termcapinfo xterm*|linux*|rxvt*|Eterm* OP

# Change the xterm initialization string from is2=\E[!p\E[?3;4l\E[4l\E>
termcapinfo xterm 'is=\E[r\E[m\E[2J\E[H\E[?7h\E[?1;4;6l'

# The vt100 description does not mention "dl"
termcapinfo vt100 dl=5\E[M

#80/132 column switching must be enabled for ^AW to work
#change init sequence to not switch width
termcapinfo  xterm Z0=\E[?3h:Z1=\E[?3l:is=\E[r\E[m\E[2J\E[H\E[?7h\E[?1;4;6l

# tell screen that xterm can switch to dark background and has function
# keys.
termcapinfo xterm 'VR=\E[?5h:VN=\E[?5l'
termcapinfo xterm 'k1=\E[11~:k2=\E[12~:k3=\E[13~:k4=\E[14~'
termcapinfo xterm 'kh=\EOH:kI=\E[2~:kD=\E[3~:kH=\EOF:kP=\E[5~:kN=\E[6~'

#terminfo xterm 'vb=\E[?5h$<200/>\E[?5l'
termcapinfo xterm 'vi=\E[?25l:ve=\E[34h\E[?25h:vs=\E[34l'

## automatically refit when i switch windows
bind 0 eval "select 0" fit
bind 1 eval "select 1" fit
bind 2 eval "select 2" fit
bind 4 eval "select 4" fit
bind 5 eval "select 5" fit
bind 6 eval "select 6" fit
bind 7 eval "select 7" fit
bind 8 eval "select 8" fit
bind 9 eval "select 9" fit

# don't pause for each screen message
msgminwait 0

# no flow control, e.g. ^S and ^Q
defflow off

# emacs keybindings for navigation in copy mode (from snarfed.org)
markkeys ^B=Y:^F=V:h=^B:l=^F:0=^A:$=^E

# C-space sets mark. markkeys does it in screen 4.0 and higher, but 3.9x
# needs the bindkey command. (note the ^@ escape sequence for C-space.)
markkeys ' '=^@
# bindkey -m ^@ stuff ' '

# page up and page down
bindkey -m -k kP stuff Y
bindkey -m -k kN stuff V

# failed attempt to make C-space work in i-search too
# bindkey -m ^@ eval "stuff \033" "stuff ^@" 

# special hack for C-e, since it should go *past*
# the last char. -m means this is for copy mode only.
bindkey -m ^e stuff "$^f"

# C-g and other keys just quit copy mode. Esc does nothing.
markkeys \033=\015=^G=^D=h=j=k=l=H=M=L=G=g=y=c=v=a=x=b=e=B=E=w
markkeys @=\033

# control arrows move by words. (set B, e, and w to F keys so that i can
# use them to move by words, but they themselves still quit copy mode.)
markkeys B=[:E=]:b={:e=}:w=>
bindkey -m ^[Od stuff {  #"[[}"
bindkey -m ^[Oc stuff ]  #"}]^f"
